/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tool;

/**
 *
 * @author sandeepk
 */
public class GenerateCode {

    public static void main(String[] args) {
        for (int i = 1; i <= 20; i++) {
            System.out.println("/*\n"
                    + " * To change this license header, choose License Headers in Project Properties.\n"
                    + " * To change this template file, choose Tools | Templates\n"
                    + " * and open the template in the editor.\n"
                    + " */\n"
                    + "package sensors;\n"
                    + "\n"
                    + "import java.net.URL;\n"
                    + "import java.util.ResourceBundle;\n"
                    + "import javafx.application.Platform;\n"
                    + "import javafx.fxml.FXML;\n"
                    + "import javafx.fxml.Initializable;\n"
                    + "import javafx.scene.control.Label;\n"
                    + "import tool.Constant;\n"
                    + "import tool.Variable;\n"
                    + "\n"
                    + "/**\n"
                    + " * FXML Controller class\n"
                    + " *\n"
                    + " * @author sandeepk\n"
                    + " */\n"
                    + "public class Sns_" + i + "Controller implements Initializable {\n"
                    + "\n"
                    + "    private static Sns_" + i + "Controller instance;\n"
                    + "\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_tag;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_type;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_address_vertical;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_address_horizontal;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_ip_address;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_port_number;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_wind_speed;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_wind_direction;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_last_reading_date_time;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_u_value;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_v_value;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_w_value;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_u_text;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_v_text;\n"
                    + "    @FXML\n"
                    + "    private Label lbl_sensor_w_text;\n"
                    + "\n"
                    + "    /**\n"
                    + "     * Initializes the controller class.\n"
                    + "     *\n"
                    + "     * @param url\n"
                    + "     * @param rb\n"
                    + "     */\n"
                    + "    @Override\n"
                    + "    public void initialize(URL url, ResourceBundle rb) {\n"
                    + "        try {\n"
                    + "            Platform.runLater(() -> {\n"
                    + "                lbl_sensor_tag.setText(\"\" + Variable.sensor_details[Variable.sensor_details_sequence_" + i + "][Constant.SENSOR_TAG]);\n"
                    + "\n"
                    + "                lbl_sensor_address_vertical.setText(\"---\");\n"
                    + "                lbl_sensor_address_horizontal.setText(\"---\");\n"
                    + "\n"
                    + "                lbl_sensor_u_text.setText(\"Direction U ( \" + Variable.u + \" ) : \");\n"
                    + "                lbl_sensor_v_text.setText(\"Direction V ( \" + Variable.v + \" ) : \");\n"
                    + "                lbl_sensor_w_text.setText(\"Direction W ( \" + Variable.w + \" ) : \");\n"
                    + "\n"
                    + "                if (Variable.sensor_details[Variable.sensor_details_sequence_" + i + "][Constant.SENSOR_TYPE_2D].equalsIgnoreCase(\"true\")) {\n"
                    + "                    lbl_sensor_type.setText(\"2D\");\n"
                    + "                    lbl_sensor_address_vertical.setText(\"\" + Variable.sensor_details[Variable.sensor_details_sequence_" + i + "][Constant.SENSOR_ADDRESS_V]);\n"
                    + "\n"
                    + "                } else {\n"
                    + "                    lbl_sensor_type.setText(\"3D\");\n"
                    + "                    lbl_sensor_address_vertical.setText(\"\" + Variable.sensor_details[Variable.sensor_details_sequence_" + i + "][Constant.SENSOR_ADDRESS_V]);\n"
                    + "                    lbl_sensor_address_horizontal.setText(\"\" + Variable.sensor_details[Variable.sensor_details_sequence_" + i + "][Constant.SENSOR_ADDRESS_H]);\n"
                    + "                }\n"
                    + "\n"
                    + "                lbl_sensor_ip_address.setText(\"\" + Variable.sensor_details[Variable.sensor_details_sequence_" + i + "][Constant.SENSOR_IP_ADDRESS]);\n"
                    + "                lbl_sensor_port_number.setText(\"\" + Variable.sensor_details[Variable.sensor_details_sequence_" + i + "][Constant.SENSOR_PORT_NUMBER]);\n"
                    + "\n"
                    + "            });\n"
                    + "        } catch (Exception e) {\n"
                    + "        }\n"
                    + "    }\n"
                    + "\n"
                    + "    public Sns_" + i + "Controller() {\n"
                    + "        instance = this;\n"
                    + "    }\n"
                    + "\n"
                    + "    public Sns_" + i + "Controller get_Controller() {\n"
                    + "        return instance;\n"
                    + "    }\n"
                    + "\n"
                    + "    public void update_sns_data(String wind_speed, String wind_direction, String u, String v, String w, String date) {\n"
                    + "        try {\n"
                    + "            Platform.runLater(() -> {\n"
                    + "                lbl_sensor_wind_speed.setText(\"\" + wind_speed + \" \" + Variable.wind_speed_unit);\n"
                    + "                lbl_sensor_wind_direction.setText(\"\" + wind_direction + \"Â° N\");\n"
                    + "                lbl_sensor_u_value.setText(\"\" + u + \" \" + Variable.wind_speed_unit);\n"
                    + "                lbl_sensor_v_value.setText(\"\" + v + \" \" + Variable.wind_speed_unit);\n"
                    + "                lbl_sensor_w_value.setText(\"\" + w + \" \" + Variable.wind_speed_unit);\n"
                    + "                lbl_last_reading_date_time.setText(date);\n"
                    + "            });\n"
                    + "        } catch (Exception e) {\n"
                    + "            e.printStackTrace();\n"
                    + "        }\n"
                    + "    }\n"
                    + "\n"
                    + "}\n"
                    + "");
            System.out.println("\n\n\n\n\n\n\n\n");
        }
    }
}
